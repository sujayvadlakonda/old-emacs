;;-*-coding: utf-8;-*-
(define-abbrev-table 'global-abbrev-table
  '(
    ("ahve" "have" nil :count 0)
    ("algs" "algorithms" nil :count 0)
    ("alreaady" "already" nil :count 0)
    ("april" "april" nil :count 0)
    ("architecturees" "architectures" nil :count 0)
    ("arhcitecure" "architecture" nil :count 0)
    ("beign" "being" nil :count 0)
    ("bojects" "objects" nil :count 0)
    ("bototom" "bottom" nil :count 0)
    ("cnotract" "contract" nil :count 0)
    ("coencerned" "concerned" nil :count 0)
    ("comitment" "commitment" nil :count 0)
    ("composoer" "composer" nil :count 0)
    ("copuling" "coupling" nil :count 0)
    ("darstic" "drastic" nil :count 1)
    ("diagmram" "diagram" nil :count 0)
    ("diagrmas" "diagrams" nil :count 0)
    ("diff" "different" nil :count 0)
    ("dishawsher" "dishwasher" nil :count 0)
    ("eff" "efficient" nil :count 0)
    ("empyt" "empty" nil :count 0)
    ("fiinished" "finished" nil :count 0)
    ("fo" "of" nil :count 5)
    ("grduating" "graduating" nil :count 0)
    ("hgih" "high" nil :count 0)
    ("hgiher" "higher" nil :count 0)
    ("iamge" "image" nil :count 0)
    ("iteravly" "iteratively" nil :count 0)
    ("lvl" "level" nil :count 0)
    ("medicien" "medicine" nil :count 0)
    ("metting" "meeting" nil :count 0)
    ("msg" "message" nil :count 4)
    ("msgs" "messages" nil :count 5)
    ("od" "do" nil :count 0)
    ("ojbect" "object" nil :count 0)
    ("orderign" "ordering" nil :count 0)
    ("otherr" "other" nil :count 0)
    ("partitons" "partitions" nil :count 0)
    ("prob" "probably" nil :count 0)
    ("rcharacters" "characters" nil :count 0)
    ("realated" "related" nil :count 0)
    ("reelvant" "relevant" nil :count 0)
    ("ret" "return" nil :count 0)
    ("ruough" "rough" nil :count 0)
    ("sanck" "snack" nil :count 0)
    ("scnees" "scenes" nil :count 0)
    ("severall" "several" nil :count 0)
    ("signle" "single" nil :count 0)
    ("statemetn" "statement" nil :count 0)
    ("taht" "that" nil :count 0)
    ("ti" "it" nil :count 0)
    ("varaibles" "variables" nil :count 0)
    ("visilbe" "visible" nil :count 0)
    ("whcih" "which" nil :count 0)
    ("wo" "without" nil :count 0)
    ("workign" "working" nil :count 0)
   ))

(define-abbrev-table 'java-mode-abbrev-table
  '(
    ("sout" "System.out.println(" nil :count 0)
   ))

(define-abbrev-table 'text-mode-abbrev-table
  '(
    ("ai" "artificial intelligence" nil :count 0)
    ("alg" "algorithm" nil :count 2)
    ("appt" "appointment" nil :count 0)
    ("apt" "apartment" nil :count 0)
    ("bb" "basketball" nil :count 0)
    ("bc" "because" nil :count 10)
    ("bw" "between" nil :count 4)
    ("doc" "document" nil :count 0)
    ("esp" "especially" nil :count 1)
    ("gb" "grand blue" nil :count 0)
    ("gh" "github" nil :count 3)
    ("gov" "government" nil :count 0)
    ("hw" "homework" nil :count 0)
    ("inv" "investigate" nil :count 1)
    ("ml" "machine learning" nil :count 13)
    ("oa" "online assessment" nil :count 0)
    ("oo" "object oriented" nil :count 1)
    ("ood" "object oriented design" nil :count 8)
    ("oop" "object oriented programming" nil :count 0)
    ("ot" "to" nil :count 0)
    ("ppl" "people" nil :count 1)
    ("q" "question" nil :count 3)
    ("si" "is" nil :count 4)
    ("tmrw" "tomorrow" nil :count 0)
    ("tt" "table tennis" nil :count 0)
    ("vb" "volleyball" nil :count 0)
    ("w" "with" nil :count 26)
    ("wo" "without" nil :count 2)
    ("yt" "youtube" nil :count 0)
   ))

